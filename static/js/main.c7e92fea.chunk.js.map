{"version":3,"sources":["components/Display.js","components/Number.js","components/Arithmetic.js","components/FunctionalOp.js","components/Operators.js","App.js","index.js"],"names":["Display","input","calculation","className","id","Number","number","setInput","setCalculation","total","setPrev","setTotal","prev","onClick","num","length","indexOf","test","concat","style","gridArea","Arithmetic","symbol","op","toString","charAt","slice","require","evaluate","round","FunctionalOp","problem","replace","result","handleClick","arithmetics","ops","Operators","map","a","index","numbers","App","useState","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7e92fea.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Display({ input, calculation }) {\n  return (\n    <div className=\"display-div\">\n      <p className=\"cal\">{calculation}</p>\n      <p className=\"inp\" id=\"display\">\n        {input}\n      </p>\n    </div>\n  );\n}\n\nexport default Display;\n","import React from \"react\";\n\nfunction Number({\n  id,\n  number,\n  input,\n  setInput,\n  setCalculation,\n  calculation,\n  total,\n  setPrev,\n  setTotal,\n  prev,\n}) {\n  const handleClick = (num) => {\n    if (input.length >= 24) {\n      setInput(\"     DIGIT LIMIT MET    \");\n    } else {\n      if (!(num === \".\" && input.indexOf(\".\") !== -1)) {\n        if (input === \"0\" && num !== \".\") {\n          setInput(num);\n          setCalculation(num);\n        } else if (input === total && num !== \".\") {\n          setInput(num);\n          setCalculation(num);\n          setTotal(\"\");\n        } else if (/[+x/-]/.test(prev) && num === \".\") {\n          setInput(input.concat(\"0.\"));\n          setCalculation(calculation.concat(\"0.\"));\n        } else {\n          setInput(input.concat(num));\n          setCalculation(calculation.concat(num));\n        }\n      }\n      setPrev(num);\n    }\n  };\n  return (\n    <button\n      id={id}\n      className=\"number\"\n      onClick={() => handleClick(number)}\n      style={{ gridArea: `${id}` }}\n    >\n      {number}\n    </button>\n  );\n}\n\nexport default Number;\n","import React from \"react\";\n\nfunction Arithmetic({\n  id,\n  input,\n  setInput,\n  setCalculation,\n  calculation,\n  total,\n  prev,\n  setPrev,\n}) {\n  const symbol =\n    id === \"add\"\n      ? \"+\"\n      : id === \"subtract\"\n      ? \"-\"\n      : id === \"multiply\"\n      ? \"x\"\n      : id === \"divide\"\n      ? \"/\"\n      : null;\n\n  const handleClick = (op) => {\n    if (input === \"0\") {\n      setInput(op);\n      setCalculation(op);\n    } else if (input.toString() === total.toString()) {\n      setInput(op);\n      setCalculation(total.concat(op));\n      //see if last char is operator and current char isnt \"-\"\n    } else if (/[+x/-]/.test(prev) && !/-/.test(op)) {\n      setInput(op);\n      //see if last two chars are operators (in case of a swapped minus)\n      if (!/\\d/.test(calculation.charAt(calculation.length - 2))) {\n        setCalculation(calculation.slice(0, calculation.length - 2).concat(op));\n      } else {\n        setCalculation(calculation.slice(0, calculation.length - 1).concat(op));\n      }\n    } else {\n      setCalculation(calculation.concat(op));\n      setInput(op);\n    }\n    setPrev(op);\n  };\n\n  return (\n    <button\n      id={id}\n      className=\"operator\"\n      style={{ gridArea: `${id}` }}\n      onClick={() => handleClick(symbol)}\n    >\n      {symbol}\n    </button>\n  );\n}\n\nexport default Arithmetic;\n","import React from \"react\";\nconst { evaluate, round } = require(\"mathjs\");\n\nfunction FunctionalOp({\n  id,\n  setInput,\n  setCalculation,\n  calculation,\n  total,\n  setTotal,\n  setPrev,\n}) {\n  const symbol = id === \"equals\" ? \"=\" : \"AC\";\n  const handleClick = () => {\n    if (id === \"clear\") {\n      setInput(\"0\");\n      setCalculation(\"\");\n      setPrev(\"\");\n      if (total) {\n        setTotal(\"\");\n      }\n    } else {\n      if (calculation && !/[/x]/.test(calculation.charAt(0))) {\n        let problem = calculation.replace(/x/g, \"*\");\n        if (problem && /[+*/-]/.test(problem.slice(problem.length - 1))) {\n          problem = problem.slice(0, problem.length - 1);\n        } else {\n          if (!/=/.test(problem)) {\n            const result = round(evaluate(problem), 4).toString();\n            setTotal(result);\n            setInput(result);\n            setCalculation(calculation.concat(\"=\", result));\n            setPrev(\"\");\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <button\n      id={id}\n      className=\"operator\"\n      style={{ gridArea: `${id}` }}\n      onClick={() => handleClick()}\n    >\n      {symbol}\n    </button>\n  );\n}\n\nexport default FunctionalOp;\n","import React from \"react\";\nimport Arithmetic from \"./Arithmetic\";\nimport FunctionalOp from \"./FunctionalOp\";\nconst arithmetics = [\"add\", \"subtract\", \"multiply\", \"divide\"];\nconst ops = [\"equals\", \"clear\"];\nfunction Operators({\n  input,\n  setInput,\n  setCalculation,\n  calculation,\n  total,\n  setTotal,\n  prev,\n  setPrev,\n}) {\n  return (\n    <>\n      {arithmetics.map((a, index) => {\n        return (\n          <Arithmetic\n            id={a}\n            key={index}\n            input={input}\n            setInput={setInput}\n            setCalculation={setCalculation}\n            calculation={calculation}\n            total={total}\n            prev={prev}\n            setPrev={setPrev}\n          />\n        );\n      })}\n      {ops.map((op, index) => {\n        return (\n          <FunctionalOp\n            id={op}\n            key={index}\n            setInput={setInput}\n            setCalculation={setCalculation}\n            calculation={calculation}\n            total={total}\n            setTotal={setTotal}\n            setPrev={setPrev}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Operators;\n","import { React, useState } from \"react\";\nimport \"./App.css\";\nimport Display from \"./components/Display\";\nimport Number from \"./components/Number\";\nimport Operators from \"./components/Operators\";\nconst numbers = [\n  [\"seven\", \"7\"],\n  [\"eight\", \"8\"],\n  [\"nine\", \"9\"],\n  [\"four\", \"4\"],\n  [\"five\", \"5\"],\n  [\"six\", \"6\"],\n  [\"one\", \"1\"],\n  [\"two\", \"2\"],\n  [\"three\", \"3\"],\n  [\"zero\", \"0\"],\n  [\"decimal\", \".\"],\n];\n\nfunction App() {\n  const [calculation, setCalculation] = useState(\"\");\n  const [input, setInput] = useState(\"0\");\n  const [total, setTotal] = useState(\"\");\n  const [prev, setPrev] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <div className=\"calc-container\">\n        <Display input={input} calculation={calculation} />\n        <div className=\"grid-container\">\n          {numbers.map((num, index) => {\n            return (\n              <Number\n                key={index}\n                id={num[0]}\n                number={num[1]}\n                input={input}\n                setInput={setInput}\n                calculation={calculation}\n                setCalculation={setCalculation}\n                setTotal={setTotal}\n                total={total}\n                prev={prev}\n                setPrev={setPrev}\n              />\n            );\n          })}\n          <Operators\n            input={input}\n            setInput={setInput}\n            calculation={calculation}\n            setCalculation={setCalculation}\n            total={total}\n            setTotal={setTotal}\n            prev={prev}\n            setPrev={setPrev}\n          />\n        </div>\n        <h5 className=\"creator\">\n          <a href=\"https://github.com/oddgrd\" target=\"_blank\" rel=\"noreferrer\">\n            by Oddgrd\n          </a>\n        </h5>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ReactFCCtest from \"react-fcctest\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactFCCtest />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}